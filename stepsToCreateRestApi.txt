For my People api:

Build the domain layer(part of business logic layer):
I created my People class which will be used via JPA to save and 
retrieve from the db.

Build the persistence layer:
Create a repository which will be used inside the application to interact with
the database. This repository will contain some methods for accessing data.

My repository is an interface that extends JpaRepository. By extending
this repository, we will have some methods for free and spring will take care
of the implementation for us.

Build the service layer:
Create service interface
Create an implementation of the previous interface. Each method implementation
will use some of the repository's methods.

Build the presentation layer:
Build the RestController

Due to the fact that I annotated the service implementation with @Service, and
the repository interface with @Repository, I do not have to create a 
configuration class for the beans.

Also application.properties provides information about how to connect to the h2 
database. Keep in mind that inside the src/main/resources I provided two sql files:
schema.sql which tells spring what table to create and data.sql which tells 
spring what data to insert inside the table.